{"version":3,"sources":["Component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerDate","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","timer","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,UAAY,EALd,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,mBAAmB,YAC9C,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,wBAA6BE,EAAUC,KAAvC,iBAAoDR,KAAKS,MAAMD,KAA/D,QAlBN,kCAsBE,WACEE,cAAcV,KAAKD,aAvBvB,oBA0BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKS,MAAMD,OAEb,YACD,sBAAMG,UAAU,cAAhB,SACGX,KAAKJ,MAAMC,KAAKS,mBAAmB,kBAlC9C,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAWR,KAHf,EAMES,MAAQ,EANV,uDAQE,WAAqB,IAAD,OAClBtB,KAAKsB,MAAQrB,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEkB,UAAWR,QAC1B,MAEHU,SAASC,iBAAiB,eAAe,WACvC,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WAC7B,EAAK5B,MAAMwB,UAKf,EAAKjB,SAAS,CAAEiB,UAAU,SAvBhC,oBA2BE,WACE,OACEpB,KAAKJ,MAAMwB,UACR,cAAC,EAAD,CAAOZ,KAAMR,KAAKJ,MAAMyB,gBA9BjC,GAAyBT,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.6b11a13f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date:Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerDate = 0;\n\n  componentDidMount() {\n    this.timerDate = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString('en-EN'));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps:Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from <${prevProps.name}> to <${this.props.name}>`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerDate);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString('en-EN')}\n        </span>\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport { Component } from 'react';\nimport { Clock } from './Component/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName:string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-useless-return\n        return;\n      }\n\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    return (\n      this.state.hasClock\n      && <Clock name={this.state.clockName} />\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}